{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\git\\\\\\uB9AC\\uC561\\uD2B8\\uB97C \\uB2E4\\uB8E8\\uB294 \\uAE30\\uC220\\\\hello-react\\\\src\\\\LifeCycleSample.js\";\nimport React, { Component } from 'react';\n\nclass LifeCycleSample extends Component {\n  // ref를 설정할 부분\n  constructor(props) {\n    super(props);\n    this.state = {\n      number: 0,\n      color: null\n    };\n    this.myRef = null;\n\n    this.handleClick = () => {\n      this.setState({\n        number: this.state.number + 1\n      });\n    };\n\n    console.log('constructor');\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    console.log('getDerivedStateFromProps');\n\n    if (nextProps.color !== prevState.color) {\n      return {\n        color: nextProps.color\n      };\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    console.log('componentDidMount');\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    console.log('shouldComponentUpdate', nextProps, nextState); // 숫자의 마지막 자리가 4면 리렌더링하지 않습니다.\n\n    return nextState.number % 10 !== 4;\n  }\n\n  componentWillUnmount() {\n    console.log('componentWillUnmount');\n  }\n\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    console.log('getSnapshotBeforeUpdate');\n\n    if (prevProps.color !== this.props.color) {\n      return this.myRef.style.color;\n    }\n\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    console.log('componentDidUpdate', prevProps, prevState);\n\n    if (snapshot) {\n      console.log('업데이트되기 직전 색상: ', snapshot);\n    }\n  }\n\n  render() {\n    console.log('render');\n    const style = {\n      color: this.props.color\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: style,\n      ref: ref => this.myRef = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.state.number), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"color: \", this.state.color), React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"\\uB354\\uD558\\uAE30\"));\n  }\n\n}\n\nexport default LifeCycleSample;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\git\\리액트를 다루는 기술\\hello-react\\src\\LifeCycleSample.js"],"names":["React","Component","LifeCycleSample","constructor","props","state","number","color","myRef","handleClick","setState","console","log","getDerivedStateFromProps","nextProps","prevState","componentDidMount","shouldComponentUpdate","nextState","componentWillUnmount","getSnapshotBeforeUpdate","prevProps","style","componentDidUpdate","snapshot","render","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AAMpB;AAEhBE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAPnBC,KAOmB,GAPX;AACJC,MAAAA,MAAM,EAAE,CADJ;AAEJC,MAAAA,KAAK,EAAE;AAFH,KAOW;AAAA,SAFnBC,KAEmB,GAFX,IAEW;;AAAA,SA2BnBC,WA3BmB,GA2BL,MAAM;AAChB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAAX,GAAoB;AADlB,OAAd;AAGH,KA/BkB;;AAEfK,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;;AAED,SAAOC,wBAAP,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AAClDJ,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACA,QAAIE,SAAS,CAACP,KAAV,KAAoBQ,SAAS,CAACR,KAAlC,EAAyC;AACrC,aAAO;AAAEA,QAAAA,KAAK,EAAEO,SAAS,CAACP;AAAnB,OAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDS,EAAAA,iBAAiB,GAAG;AAChBL,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH;;AAEDK,EAAAA,qBAAqB,CAACH,SAAD,EAAYI,SAAZ,EAAuB;AACxCP,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCE,SAArC,EAAgDI,SAAhD,EADwC,CAExC;;AACA,WAAOA,SAAS,CAACZ,MAAV,GAAmB,EAAnB,KAA0B,CAAjC;AACH;;AAEDa,EAAAA,oBAAoB,GAAG;AACnBR,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAQDQ,EAAAA,uBAAuB,CAACC,SAAD,EAAYN,SAAZ,EAAuB;AAC1CJ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;;AACA,QAAIS,SAAS,CAACd,KAAV,KAAoB,KAAKH,KAAL,CAAWG,KAAnC,EAA0C;AACtC,aAAO,KAAKC,KAAL,CAAWc,KAAX,CAAiBf,KAAxB;AACH;;AACD,WAAO,IAAP;AACH;;AAEDgB,EAAAA,kBAAkB,CAACF,SAAD,EAAYN,SAAZ,EAAuBS,QAAvB,EAAiC;AAC/Cb,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCS,SAAlC,EAA6CN,SAA7C;;AACA,QAAIS,QAAJ,EAAc;AACVb,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BY,QAA9B;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACLd,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AAEA,UAAMU,KAAK,GAAG;AACVf,MAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AADR,KAAd;AAIA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAEe,KAAX;AAAkB,MAAA,GAAG,EAAEI,GAAG,IAAI,KAAKlB,KAAL,GAAakB,GAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWC,MADhB,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAW,KAAKD,KAAL,CAAWE,KAAtB,CAJJ,EAKI;AAAQ,MAAA,OAAO,EAAE,KAAKE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,CADJ;AAWH;;AA1EmC;;AA6ExC,eAAeP,eAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass LifeCycleSample extends Component {\r\n    state = {\r\n        number: 0,\r\n        color: null\r\n    };\r\n\r\n    myRef = null;   // ref를 설정할 부분\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log('constructor');\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps, prevState) {\r\n        console.log('getDerivedStateFromProps');\r\n        if (nextProps.color !== prevState.color) {\r\n            return { color: nextProps.color };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log('shouldComponentUpdate', nextProps, nextState);\r\n        // 숫자의 마지막 자리가 4면 리렌더링하지 않습니다.\r\n        return nextState.number % 10 !== 4;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('componentWillUnmount');\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({\r\n            number: this.state.number + 1\r\n        });\r\n    }\r\n\r\n    getSnapshotBeforeUpdate(prevProps, prevState) {\r\n        console.log('getSnapshotBeforeUpdate');\r\n        if (prevProps.color !== this.props.color) {\r\n            return this.myRef.style.color;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        console.log('componentDidUpdate', prevProps, prevState);\r\n        if (snapshot) {\r\n            console.log('업데이트되기 직전 색상: ', snapshot);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('render');\r\n\r\n        const style = {\r\n            color: this.props.color\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <h1 style={style} ref={ref => this.myRef = ref}>\r\n                    {this.state.number}\r\n                </h1>\r\n                <p>color: {this.state.color}</p>\r\n                <button onClick={this.handleClick}>\r\n                    더하기\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LifeCycleSample;"]},"metadata":{},"sourceType":"module"}