{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\git\\\\\\uB9AC\\uC561\\uD2B8\\uB97C \\uB2E4\\uB8E8\\uB294 \\uAE30\\uC220\\\\hello-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\git\\\\\\uB9AC\\uC561\\uD2B8\\uB97C \\uB2E4\\uB8E8\\uB294 \\uAE30\\uC220\\\\hello-react\\\\src\\\\IterationSample.js\";\nimport React, { Component } from 'react';\n\nconst IterationSample = () => {\n  const _useState = useState([{\n    id: 1,\n    text: '눈사람'\n  }, {\n    id: 2,\n    text: '얼음'\n  }, {\n    id: 3,\n    text: '눈'\n  }, {\n    id: 4,\n    text: '바람'\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        names = _useState2[0],\n        setNames = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        inputText = _useState4[0],\n        setInputText = _useState4[1];\n\n  const _useSate = useSate(5),\n        _useSate2 = _slicedToArray(_useSate, 2),\n        nextId = _useSate2[0],\n        setNextId = _useSate2[1]; // 새로운 항목을 추가할 때 사용할 id\n\n\n  const namesList = names.map(name => React.createElement(\"li\", {\n    key: name.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, name.text));\n  return React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, nameList);\n};\n\nexport default IterationSample;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\git\\리액트를 다루는 기술\\hello-react\\src\\IterationSample.js"],"names":["React","Component","IterationSample","useState","id","text","names","setNames","inputText","setInputText","useSate","nextId","setNextId","namesList","map","name","nameList"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAAA,oBACAC,QAAQ,CAAC,CAC/B;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAD+B,EAE/B;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAF+B,EAG/B;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAH+B,EAI/B;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAJ+B,CAAD,CADR;AAAA;AAAA,QACnBC,KADmB;AAAA,QACZC,QADY;;AAAA,qBAOQJ,QAAQ,CAAC,EAAD,CAPhB;AAAA;AAAA,QAOnBK,SAPmB;AAAA,QAORC,YAPQ;;AAAA,mBAQEC,OAAO,CAAC,CAAD,CART;AAAA;AAAA,QAQnBC,MARmB;AAAA,QAQXC,SARW,iBAQc;;;AAExC,QAAMC,SAAS,GAAGP,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAI;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACX,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBW,IAAI,CAACV,IAAxB,CAAlB,CAAlB;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKW,QAAL,CAAP;AACH,CAZD;;AAcA,eAAed,eAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nconst IterationSample = () => {\r\n    const [names, setNames] = useState([\r\n        { id: 1, text: '눈사람' },\r\n        { id: 2, text: '얼음' },\r\n        { id: 3, text: '눈' },\r\n        { id: 4, text: '바람' }\r\n    ]);\r\n    const [inputText, setInputText] = useState('');\r\n    const [nextId, setNextId] = useSate(5); // 새로운 항목을 추가할 때 사용할 id\r\n\r\n    const namesList = names.map(name => <li key={name.id}>{name.text}</li>);\r\n    return <ul>{nameList}</ul>;\r\n};\r\n\r\nexport default IterationSample;"]},"metadata":{},"sourceType":"module"}