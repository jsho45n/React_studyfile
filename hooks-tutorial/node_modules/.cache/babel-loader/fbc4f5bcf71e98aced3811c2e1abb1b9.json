{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\git\\\\\\uB9AC\\uC561\\uD2B8\\uB97C \\uB2E4\\uB8E8\\uB294 \\uAE30\\uC220\\\\hooks-tutorial\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\git\\\\\\uB9AC\\uC561\\uD2B8\\uB97C \\uB2E4\\uB8E8\\uB294 \\uAE30\\uC220\\\\hooks-tutorial\\\\src\\\\Counter.js\";\nimport React, { useReducer } from 'react';\n\nfunction reducer(state, action) {\n  // action.type에 따라 다른 작업 수행\n  switch (action.type) {\n    case 'INCREMENT':\n      return {\n        value: state.value + 1\n      };\n\n    case 'DECREMENT':\n      return {\n        value: state.value - 1\n      };\n\n    default:\n      // 아무것도 해당되지 않을 때 기존 상태 반환\n      return state;\n  }\n}\n\nconst Counter = () => {\n  const _useReducer = useReducer(reducer, {\n    value: 0\n  }),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        state = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"\\uD604\\uC7AC \\uCE74\\uC6B4\\uD130 \\uAC12\\uC740 \", React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, state.value), \"\\uC785\\uB2C8\\uB2E4.\"), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'INCREMENT'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"+1\"), React.createElement(\"button\", {\n    onClick: () => dispatch({\n      type: 'DECREMENT'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"-1\"));\n};\n\nexport default Counter;","map":{"version":3,"sources":["C:\\Users\\user\\Desktop\\git\\리액트를 다루는 기술\\hooks-tutorial\\src\\Counter.js"],"names":["React","useReducer","reducer","state","action","type","value","Counter","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AACI,aAAO;AAAEC,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAvB,OAAP;;AACJ,SAAK,WAAL;AACI,aAAO;AAAEA,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAAvB,OAAP;;AACJ;AACI;AACA,aAAOH,KAAP;AAPR;AASH;;AAED,MAAMI,OAAO,GAAG,MAAM;AAAA,sBACQN,UAAU,CAACC,OAAD,EAAU;AAAEI,IAAAA,KAAK,EAAE;AAAT,GAAV,CADlB;AAAA;AAAA,QACXH,KADW;AAAA,QACJK,QADI;;AAGlB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIL,KAAK,CAACG,KAAV,CADd,wBADJ,EAII;AAAQ,IAAA,OAAO,EAAE,MAAME,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJJ,EAKI;AAAQ,IAAA,OAAO,EAAE,MAAMG,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ,CADJ;AASH,CAZD;;AAcA,eAAeE,OAAf","sourcesContent":["import React, { useReducer } from 'react';\r\n\r\nfunction reducer(state, action) {\r\n    // action.type에 따라 다른 작업 수행\r\n    switch (action.type) {\r\n        case 'INCREMENT':\r\n            return { value: state.value + 1 };\r\n        case 'DECREMENT':\r\n            return { value: state.value - 1 };\r\n        default:\r\n            // 아무것도 해당되지 않을 때 기존 상태 반환\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Counter = () => {\r\n    const [state, dispatch] = useReducer(reducer, { value: 0 });\r\n\r\n    return (\r\n        <div>\r\n            <p>\r\n                현재 카운터 값은 <b>{state.value}</b>입니다.\r\n            </p>\r\n            <button onClick={() => dispatch({ type: 'INCREMENT' })}>+1</button>\r\n            <button onClick={() => dispatch({ type: 'DECREMENT' })}>-1</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Counter;"]},"metadata":{},"sourceType":"module"}